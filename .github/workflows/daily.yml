# 文件路径: .github/workflows/daily.yaml

name: Run Daily Arxiv Code Finder

on:
  # 允许你从 Actions 页面手动触发
  workflow_dispatch:
  # 定时触发，每天 UTC 时间 12:00 运行
  schedule:
    - cron: "0 12 * * *"

jobs:
  build-and-commit:
    name: Find Papers with Code and Commit
    runs-on: ubuntu-latest
    
    steps:
      # 1. 检出你的代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'

      # 3. 安装依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. 运行 Python 脚本 (注意：这里不再需要 env 和 secrets)
      - name: Run daily_arxiv.py script
        run: python daily_arxiv.py

      # 5. 提交并推送生成的文件
      - name: Commit and push changes
        run: |
          # 配置 Git 的用户名和邮箱
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # 添加所有被脚本修改或创建的文件
          git add README.md daily.json archives/
          
          # 检查是否有文件变动
          # git status
          
          # 提交变动。如果没有任何变动，`git commit`会失败，我们用 `|| echo "..."` 来防止工作流因此中断
          git commit -m "Update daily arXiv papers with code" || echo "No changes to commit"
          
          # 将变动推送到 main 分支
          git push
